#include "mbed.h"
#include "arm_book_lib.h"

#define BLINKING_RATE     500ms

int main()
{
    // Gas and temperature detectors
    DigitalIn gasDetector(D2);
    DigitalIn overTempDetector(D3);

    // Buttons for deactivating the alarm
    DigitalIn aButton(D4);
    DigitalIn bButton(D5);
    DigitalIn cButton(D6);
    DigitalIn dButton(D7);

    // Alarm LED
    DigitalOut alarmLed(LED1);

    // Configure pull-down resistors for buttons and detectors
    gasDetector.mode(PullDown);
    overTempDetector.mode(PullDown);
    aButton.mode(PullDown);
    bButton.mode(PullDown);
    cButton.mode(PullDown);
    dButton.mode(PullDown);

    alarmLed = OFF;  // Alarm LED starts OFF

    // Alarm state variables
    bool alarmState = OFF;
    bool flashingMode = false;  // Track if we should keep flashing

    while (true) {
        // Check if either detector is pressed
        if (gasDetector || overTempDetector) {
            alarmState = ON;  // Activate alarm
        }

        // Check if both detectors are pressed
        if (gasDetector && overTempDetector) {
            flashingMode = true;  // Enable flashing mode
        }

        // If emergency mode is active, keep flashing
        if (flashingMode) {
            alarmLed = !alarmLed;  // Toggle LED state
            ThisThread::sleep_for(BLINKING_RATE);  // Control blink rate
        } else if (alarmState == ON) {
            // If alarm is on but not in flashing mode, keep LED solid
            alarmLed = ON;
        } else {
            // If alarm is off, turn LED off
            alarmLed = OFF;
        }

        // Deactivate alarm with 4 digit code (aButton + bButton)
        if (aButton && bButton && !cButton && !dButton) {
            alarmState = OFF;   // Reset alarm state
            flashingMode = false; // Stop flashing mode
            alarmLed = OFF;     // Turn off the LED
        }
    }
}
