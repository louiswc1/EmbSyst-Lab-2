#include "mbed.h"
#include "arm_book_lib.h"

#define BLINKING_RATE     500ms

int main()
{
    //Declare input variables
    DigitalIn gasDetector(D2);
    DigitalIn overTempDetector(D3);
    DigitalIn enterButton(BUTTON1);
    DigitalIn aButton(D4);
    DigitalIn bButton(D5);
    DigitalIn cButton(D6);
    DigitalIn dButton(D7);

    //Declare output variables
    DigitalOut alarmLed(LED1);
    DigitalOut incorrectCodeLed(LED3);
    DigitalOut systemBlockedLed(LED2);

    gasDetector.mode(PullDown);
    overTempDetector.mode(PullDown);
    aButton.mode(PullDown);
    bButton.mode(PullDown);
    cButton.mode(PullDown);
    dButton.mode(PullDown);

//Declare base states for output variables
    alarmLed = OFF;
    incorrectCodeLed = OFF;
    systemBlockedLed = OFF;

    //Start of boolean variables
    bool alarmState = OFF;
    bool flashingMode = false;
    int incorrectAttempts = 0;

    while (true) {
        // Check if either detector is triggered
        if (gasDetector || overTempDetector) {
            alarmState = ON;
        }

        // If both detectors are activated alarm activates and flashes in Emergency Mode.
        if (gasDetector && overTempDetector) {
            flashingMode = true;
        }

        // If flashing mode is active, keep flashing
        if (flashingMode) {
            while (flashingMode) {
                alarmLed = !alarmLed;
                ThisThread::sleep_for(BLINKING_RATE);
                // Ensure flashing mode remains active until correct code is entered
                if (aButton && bButton && enterButton) {
                    flashingMode = false;
                    alarmState = OFF;
                    alarmLed = OFF;
                    incorrectAttempts = 0;
                    incorrectCodeLed = OFF;
                    systemBlockedLed = OFF;
                    break;
                }
            }
        } else if (alarmState == ON) {
            alarmLed = ON;
        } else {
            alarmLed = OFF;
        }

        // Stop the alarm when the correct code is entered
        if (aButton && bButton && enterButton) {
            alarmState = OFF;
            flashingMode = false;
            alarmLed = OFF;
            incorrectAttempts = 0;
            incorrectCodeLed = OFF;
            systemBlockedLed = OFF;
            continue; // Skip the rest of the loop to prevent incorrect attempt counting
        } 
        // Incorrect code entry (only if system is not blocked and the correct code isn't being entered)
        else if (!systemBlockedLed && (aButton || bButton || enterButton)) {
            incorrectCodeLed = ON;
            incorrectAttempts++;
        }

        // Reset incorrect attempts when all four buttons are pressed simultaneously
        if (aButton && bButton && cButton && dButton) {
            incorrectAttempts = 0;
            incorrectCodeLed = OFF;
        }

        // Block system on fifth incorrect attempt
        if (incorrectAttempts >= 5) {
            systemBlockedLed = ON;
        }
    }
}
